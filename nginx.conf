# Rate limit zones
limit_req_zone $binary_remote_addr zone=tor:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=listen:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=wallet:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=donate:10m rate=10r/s;

# HTTP
server {
	
	# Listen on port 80
	listen 80;
	listen [::]:80;
	
	# Server name
	server_name mwcwallet.com www.mwcwallet.com;
	
	# Don't expose server information
	server_tokens off;
	more_clear_headers Server;
	
	# Redirect HTTP to HTTPS
	return 301 https://mwcwallet.com$request_uri;
}

# HTTPS
server {
	
	# Listen on port 443
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	
	# SSL configuration
	ssl_certificate $document_root/../fullchain.pem;
	ssl_certificate_key $document_root/../privkey.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	
	# Server name
	server_name www.mwcwallet.com;
	
	# Don't expose server information
	server_tokens off;
	more_clear_headers Server;
	
	# Redirect to non-subdomain
	return 301 https://mwcwallet.com$request_uri;
}

# HTTPS
server {
	
	# Listen on port 443
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	
	# SSL configuration
	ssl_certificate $document_root/../fullchain.pem;
	ssl_certificate_key $document_root/../privkey.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	
	# Server name
	server_name mwcwallet.com;
	
	# Don't expose server information
	server_tokens off;
	more_clear_headers Server;
	
	# Root
	root /srv/mwcwallet.com/public_html;
	
	# Enable push preload
	http2_push_preload on;

	# Default files
	index index.html;
	
	# Enable gzip compression
	gzip on;
	gzip_static on;
	gzip_disable "msie6";
	gzip_vary on;
	gzip_proxied any;
	gzip_min_length 1000;
	gzip_comp_level 9;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/xml text/plain text/css application/javascript application/json application/manifest+json application/wasm image/svg+xml image/x-icon image/png font/woff font/woff2;
	
	# Character encoding
	charset utf-8;
	source_charset utf-8;
	charset_types text/xml text/plain text/css application/javascript application/json application/manifest+json image/svg+xml;
	
	# Turn off directory listings
	autoindex off;
	
	# Turn on ETags
	etag on;
	
	# Error pages
	error_page 401 /errors/401.html;
	error_page 403 /errors/403.html;
	error_page 404 /errors/404.html;
	error_page 500 /errors/500.html;
	error_page 502 /errors/502.html;
	error_page 503 /errors/503.html;
	error_page 504 /errors/504.html;
	
	# Go to error 404 if file isn't found
	try_files $uri $uri/ =404;
	
	# Tor
	location ~ ^/tor/(https?)://?(.+/.*)$ {
	
		# Set resolver
		resolver 127.0.0.53;
		resolver_timeout 30s;
		
		# Block access
		unblock ^(?:/.+)?/v2/foreign$;
		allow_top_level_domain ".onion";
		allow_method POST;
		allow_method OPTIONS;
		require_header Origin "^https://mwcwallet\.com$";
		require_header Origin "^null$";
		require_header Origin "^.+-extension://.+$";
		require_header Content-Type "^application/json(?:;.*)?$" POST;
		block_access $1://$2;
		
		# SOCKS proxy request
		socks_proxy_http_version 1.1;
		socks_proxy_pass_request_headers off;
		socks_proxy_pass_request_body on;
		socks_proxy_buffering off;
		socks_proxy_request_buffering off;
		socks_proxy_socket_keepalive off;
		socks_proxy_ssl_server_name on;
		keepalive_timeout 0;
		socks_proxy_cache off;
		socks_proxy_redirect ~^(.*)$ /tor/$1;
		socks_proxy_connect_timeout 60s;
		socks_proxy_send_timeout 2m;
		socks_proxy_read_timeout 208w;
		socks_proxy_set_header Connection close;
		socks_proxy_set_header Accept-Encoding $http_accept_encoding;
		socks_proxy_set_header Content-Type $http_content_type;
		socks_proxy_set_header Content-Length $http_content_length;
		socks_proxy_set_header Authorization $http_authorization;
		socks_proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
		socks_proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
		socks_proxy_ignore_headers "X-Accel-Redirect" "X-Accel-Expires" "X-Accel-Limit-Rate" "X-Accel-Buffering" "X-Accel-Charset" "Expires" "Cache-Control" "Set-Cookie" "Vary";
		socks_proxy_set_destination $1://$2;
		allow_headers on;
		allow_header Content-Type;
		allow_header Transfer-Encoding;
		allow_header Content-Length;
		allow_header Content-Encoding;
		allow_header Access-Control-Allow-Headers;
		allow_header Access-Control-Allow-Methods;
		allow_header Access-Control-Allow-Origin;
		allow_header Access-Control-Allow-Credentials;
		allow_header Access-Control-Expose-Headers;
		allow_header Access-Control-Max-Age;
		gzip off;
		gzip_vary off;
		limit_req zone=tor burst=40 delay=20;
		socks_proxy_pass http://ip6-localhost:9050$is_args$args;
		client_max_body_size 10M;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_disabled.html;
	}
	
	# Listen
	location = /listen {
	
		# Proxy request
		proxy_http_version 1.1;
		proxy_pass_request_headers off;
		proxy_pass_request_body off;
		proxy_buffering off;
		proxy_request_buffering off;
		proxy_socket_keepalive off;
		proxy_ssl_server_name on;
		keepalive_timeout 0;
		proxy_cache off;
		proxy_redirect off;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 60s;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
		proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
		proxy_set_header Origin $http_origin;
		proxy_set_header Host $http_host;
		proxy_set_header Server $scheme://$server_name;
		proxy_set_header Cookie $http_cookie;
		allow_headers on;
		allow_header Upgrade;
		allow_header Connection;
		allow_header Sec-WebSocket-Accept;
		allow_header Sec-WebSocket-Extensions;
		allow_header Set-Cookie;
		gzip off;
		gzip_vary off;
		limit_req zone=listen burst=40 delay=20;
		proxy_pass http://ip6-localhost:9000;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_disabled.html;
	}
	
	# Wallet
	location ~ ^/wallet/[a-zA-Z0-9]+/v2/foreign$ {
	
		# Proxy request
		proxy_http_version 1.1;
		proxy_pass_request_headers off;
		proxy_pass_request_body on;
		proxy_buffering off;
		proxy_request_buffering off;
		proxy_socket_keepalive off;
		proxy_ssl_server_name on;
		keepalive_timeout 0;
		proxy_cache off;
		proxy_redirect off;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 208w;
		proxy_set_header Content-Type $http_content_type;
		proxy_set_header Content-Length $http_content_length;
		proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
		proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
		allow_headers on;
		allow_header Content-Type;
		allow_header Transfer-Encoding;
		allow_header Content-Length;
		allow_header Access-Control-Allow-Origin;
		allow_header Access-Control-Allow-Headers;
		allow_header Access-Control-Allow-Methods;
		limit_req zone=wallet burst=40 delay=20;
		proxy_pass http://ip6-localhost:9000;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_enabled.html;
	}
	
	# Donate
	location = /donate/v2/foreign {
	
		# Proxy request
		proxy_http_version 1.1;
		proxy_pass_request_headers off;
		proxy_pass_request_body on;
		proxy_buffering off;
		proxy_request_buffering off;
		proxy_socket_keepalive off;
		proxy_ssl_server_name on;
		keepalive_timeout 0;
		proxy_cache off;
		proxy_redirect off;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 60s;
		proxy_set_header Content-Type $http_content_type;
		proxy_set_header Content-Length $http_content_length;
		proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
		proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
		allow_headers on;
		allow_header Content-Type;
		allow_header Transfer-Encoding;
		allow_header Content-Length;
		allow_header Access-Control-Allow-Origin;
		allow_header Access-Control-Allow-Headers;
		allow_header Access-Control-Allow-Methods;
		limit_req zone=donate burst=40 delay=20;
		proxy_pass http://ip6-localhost:3415/v2/foreign;
		client_max_body_size 10M;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_enabled.html;
	}
	
	# PHP config
	location = /.user.ini {
		
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Backend
	location ~ ^/backend/.*$ {
		
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Languages
	location ~ ^/languages/.*$ {
		
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Template
	location = /errors/template.php {
	
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Robots
	location = /robots.txt {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in 30 days
		expires 30d;
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Sitemap
	location = /sitemap.xml {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in 30 days
		expires 30d;
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Favicon
	location = /favicon.ico {
	
		# Expires in 30 days
		expires 30d;
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
	}
	
	# Privacy policy
	location = /privacy_policy.txt {
	
		# Turn off ETags
		etag off;
		
		# Remove last modified header
		add_header Last-Modified "";
	
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
	}
	
	# Connection test
	location = /connection_test.html {
	
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Service worker
	location = /scripts/service_worker.js {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in one day
		expires 1d;
		
		# Allow worker to be imported
		add_header Cross-Origin-Embedder-Policy "require-corp";
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Web workers
	location ~ ^/scripts/(?:output_worker|camera_worker|slate_worker)\.js$ {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Allow worker to be imported
		add_header Cross-Origin-Embedder-Policy "require-corp";
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Font CSS
	location ~ ^/fonts/.+\.css$ {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Preprocess CSS
	location ~ ^/styles/(?:unlocked|section)\.css$ {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Proxy error CORS enabled
	location = /errors/proxy_error_cors_enabled.html {
	
		# Only allow internal requests to this location
		internal;
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
	
		# Turn off ETags
		etag off;
		
		# Disable range
		max_ranges 0;
		
		# Remove last modified header
		add_header Last-Modified "";
		
		# Don't let browsers/proxies cache or edit the response
		add_header "Cache-Control" "no-store, no-transform" always;
		
		# Allow cross origin access
		add_header Access-Control-Allow-Origin "*" always;
	}
	
	# Proxy error CORS disabled
	location = /errors/proxy_error_cors_disabled.html {
	
		# Only allow internal requests to this location
		internal;
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
	
		# Turn off ETags
		etag off;
		
		# Disable range
		max_ranges 0;
		
		# Remove last modified header
		add_header Last-Modified "";
		
		# Don't let browsers/proxies cache or edit the response
		add_header "Cache-Control" "no-store, no-transform" always;
	}
	
	# Root
	location = /index.html {
	
		# Check if URL is /index.html
		if ($request_uri ~ ^/index\.html) {
		
			# Redirect to /
			return 301 https://mwcwallet.com/$is_args$args;
		}
		
		# Check if user isn't the server
		if ($remote_addr != $server_addr) {
		
			# Set enforce maintenance component
			set $enforceMaintenance Y;
		}
	
		# Check if user isn't from an allowed IP address
		if ($remote_addr !~ ^(?:127\.0\.0\.1)$) {
		
			# Set enforce maintenance component
			set $enforceMaintenance "${enforceMaintenance}E";
		}
	
		# Check if performing site maintenance
		if (-f $document_root/../performing_maintenance.txt) {
		
			# Set enforce maintenance component
			set $enforceMaintenance "${enforceMaintenance}S";
		}
		
		# Check if enforcing site maintenance
		if ($enforceMaintenance = YES) {
			
			# Return error 503
			rewrite ^ /errors/503.html last;
		}
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Push resources
		more_set_headers -s 200 "Set-Cookie: $cookie";
		more_set_headers -s 200 "Link: $resources";
		
		# Only allow being in an iframes of the same origin
		more_set_headers -s 200 "X-Frame-Options: DENY";
		
		# Disable MIME sniffing
		more_set_headers -s 200 "X-Content-Type-Options: nosniff";
		
		# Prevent loading page if reflected cross-site scripting attack is detected
		more_set_headers -s 200 "X-XSS-Protection: 1; mode=block";
		
		# Isolate the browsing context for the site
		more_set_headers -s 200 "Cross-Origin-Opener-Policy: same-origin";
		more_set_headers -s 200 "Cross-Origin-Embedder-Policy: require-corp";
		
		# Allows browsers to use HTTPS for all further requests
		more_set_headers -s 200 "Strict-Transport-Security: max-age=63072000; includeSubDomains; preload";
		
		# Set content security policy
		more_set_headers -s 200 "Content-Security-Policy: default-src 'self'; connect-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:";
		
		# Set referrer policy to not include a referrer header
		more_set_headers -s 200 "Referrer-Policy: same-origin";
		
		# Add onion location
		more_set_headers -s 200 "Onion-Location: http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion$request_uri";
		
		# Set permissions policy
		more_set_headers -s 200 "Permissions-Policy: camera=(self), screen-wake-lock=(self), clipboard-write=(self), usb=(self), bluetooth=(self), cross-origin-isolated=(self), vertical-scroll=(self), execution-while-not-rendered=(self), execution-while-out-of-viewport=(self), focus-without-user-activation=(self), autoplay=(), display-capture=(), encrypted-media=(), fullscreen=(), hid=(), idle-detection=(), otp-credentials=(), picture-in-picture=(), serial=(), sync-xhr=(), accelerometer=(), document-domain=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), publickey-credentials-get=(), xr-spatial-tracking=(), clipboard-read=(), ambient-light-sensor=(), attribution-reporting=(), gamepad=(), keyboard-map=(), window-placement=()";
		
		# Don't let browsers/proxies cache or edit the response
		more_set_headers -s 200 "Cache-Control: no-store, no-transform";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_param TOR_SERVER_ADDRESS http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# HTML
	location ~* \.html$ {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Push resources
		add_header Set-Cookie $cookie always;
		add_header Link $resources always;
		
		# Only allow being in an iframes of the same origin
		add_header X-Frame-Options "DENY" always;
		
		# Disable MIME sniffing
		add_header X-Content-Type-Options "nosniff" always;
		
		# Prevent loading page if reflected cross-site scripting attack is detected
		add_header X-XSS-Protection "1; mode=block" always;
		
		# Isolate the browsing context for the site
		add_header Cross-Origin-Opener-Policy "same-origin" always;
		add_header Cross-Origin-Embedder-Policy "require-corp" always;
		
		# Allows browsers to use HTTPS for all further requests
		add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
		
		# Set content security policy
		add_header Content-Security-Policy "default-src 'self'; connect-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:" always;
		
		# Set referrer policy to not include a referrer header
		add_header Referrer-Policy "same-origin" always;
		
		# Add onion location
		add_header Onion-Location $onion_location always;
		
		# Set permissions policy
		add_header Permissions-Policy "camera=(self), screen-wake-lock=(self), clipboard-write=(self), usb=(self), bluetooth=(self), cross-origin-isolated=(self), vertical-scroll=(self), execution-while-not-rendered=(self), execution-while-out-of-viewport=(self), focus-without-user-activation=(self), autoplay=(), display-capture=(), encrypted-media=(), fullscreen=(), hid=(), idle-detection=(), otp-credentials=(), picture-in-picture=(), serial=(), sync-xhr=(), accelerometer=(), document-domain=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), publickey-credentials-get=(), xr-spatial-tracking=(), clipboard-read=(), ambient-light-sensor=(), attribution-reporting=(), gamepad=(), keyboard-map=(), window-placement=()" always;
		
		# Don't let browsers/proxies cache or edit the response
		add_header "Cache-Control" "no-store, no-transform" always;
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_param TOR_SERVER_ADDRESS http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# XML and manifest
	location ~* \.(?:xml|webmanifest)$ {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# JavaScript, CSS, JSON, images, and text
	location ~* \.(?:js|css|json|png|ico|svg|txt)$ {
	
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# WOFF font
	location ~* \.woff$ {
	
		# Set mime type
		default_type font/woff;
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# WOFF2 font
	location ~* \.woff2$ {
	
		# Set mime type
		default_type font/woff2;
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# WebAssembly
	location ~* \.wasm$ {
	
		# Set mime type
		default_type application/wasm;
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# Shaders
	location ~* \.(?:vert|frag)$ {
	
		# Set mime type
		default_type text/plain;
		
		# Expires in two year
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
}

# Onion Service
server {
	
	# Listen on port 9001
	listen ip6-localhost:9001;
	
	# Server name
	server_name www.mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion;
	
	# Don't expose server information
	server_tokens off;
	more_clear_headers Server;
	
	# Redirect to non-subdomain
	return 301 http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion$request_uri;
}

# Onion Service
server {
	
	# Listen on port 9001
	listen ip6-localhost:9001;
	
	# Server name
	server_name mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion;
	
	# Don't expose server information
	server_tokens off;
	more_clear_headers Server;
	
	# Root
	root /srv/mwcwallet.com/public_html;

	# Default files
	index index.html;
	
	# Enable gzip compression
	gzip on;
	gzip_static on;
	gzip_disable "msie6";
	gzip_vary on;
	gzip_proxied any;
	gzip_min_length 1000;
	gzip_comp_level 9;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/xml text/plain text/css application/javascript application/json application/manifest+json application/wasm image/svg+xml image/x-icon image/png font/woff font/woff2;
	
	# Character encoding
	charset utf-8;
	source_charset utf-8;
	charset_types text/xml text/plain text/css application/javascript application/json application/manifest+json image/svg+xml;
	
	# Turn off directory listings
	autoindex off;
	
	# Turn on ETags
	etag on;
	
	# Error pages
	error_page 401 /errors/401.html;
	error_page 403 /errors/403.html;
	error_page 404 /errors/404.html;
	error_page 500 /errors/500.html;
	error_page 502 /errors/502.html;
	error_page 503 /errors/503.html;
	error_page 504 /errors/504.html;
	
	# Go to error 404 if file isn't found
	try_files $uri $uri/ =404;
	
	# Tor
	location ~ ^/tor/(https?)://?(.+/.*)$ {
	
		# Set resolver
		resolver 127.0.0.53;
		resolver_timeout 30s;
		
		# Block access
		unblock ^(?:/.+)?/v2/foreign$;
		allow_top_level_domain ".onion";
		allow_method POST;
		require_header Origin "^http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad\.onion$";
		require_header X-Requested-With "^XMLHttpRequest$";
		require_header Content-Type "^application/json(?:;.*)?$";
		block_access $1://$2;
		
		# SOCKS proxy request
		socks_proxy_http_version 1.1;
		socks_proxy_pass_request_headers off;
		socks_proxy_pass_request_body on;
		socks_proxy_buffering off;
		socks_proxy_request_buffering off;
		socks_proxy_socket_keepalive off;
		socks_proxy_ssl_server_name on;
		keepalive_timeout 0;
		socks_proxy_cache off;
		socks_proxy_redirect ~^(.*)$ /tor/$1;
		socks_proxy_connect_timeout 60s;
		socks_proxy_send_timeout 2m;
		socks_proxy_read_timeout 208w;
		socks_proxy_set_header Connection close;
		socks_proxy_set_header Accept-Encoding $http_accept_encoding;
		socks_proxy_set_header Content-Type $http_content_type;
		socks_proxy_set_header Content-Length $http_content_length;
		socks_proxy_set_header Authorization $http_authorization;
		socks_proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
		socks_proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
		socks_proxy_ignore_headers "X-Accel-Redirect" "X-Accel-Expires" "X-Accel-Limit-Rate" "X-Accel-Buffering" "X-Accel-Charset" "Expires" "Cache-Control" "Set-Cookie" "Vary";
		socks_proxy_set_destination $1://$2;
		allow_headers on;
		allow_header Content-Type;
		allow_header Transfer-Encoding;
		allow_header Content-Length;
		allow_header Content-Encoding;
		allow_header Access-Control-Allow-Headers;
		allow_header Access-Control-Allow-Methods;
		allow_header Access-Control-Allow-Origin;
		allow_header Access-Control-Allow-Credentials;
		allow_header Access-Control-Expose-Headers;
		allow_header Access-Control-Max-Age;
		gzip off;
		gzip_vary off;
		limit_req zone=tor burst=40 delay=20;
		socks_proxy_pass http://ip6-localhost:9050$is_args$args;
		client_max_body_size 10M;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_disabled.html;
	}
	
	# Listen
	location = /listen {
	
		# Proxy request
		proxy_http_version 1.1;
		proxy_pass_request_headers off;
		proxy_pass_request_body off;
		proxy_buffering off;
		proxy_request_buffering off;
		proxy_socket_keepalive off;
		proxy_ssl_server_name on;
		keepalive_timeout 0;
		proxy_cache off;
		proxy_redirect off;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 60s;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
		proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
		proxy_set_header Origin $http_origin;
		proxy_set_header Host $http_host;
		proxy_set_header Server $scheme://$server_name;
		proxy_set_header Cookie $http_cookie;
		allow_headers on;
		allow_header Upgrade;
		allow_header Connection;
		allow_header Sec-WebSocket-Accept;
		allow_header Sec-WebSocket-Extensions;
		allow_header Set-Cookie;
		gzip off;
		gzip_vary off;
		limit_req zone=listen burst=40 delay=20;
		proxy_pass http://ip6-localhost:9000;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_disabled.html;
	}
	
	# Wallet
	location ~ ^/wallet/[a-zA-Z0-9]+/v2/foreign$ {
	
		# Proxy request
		proxy_http_version 1.1;
		proxy_pass_request_headers off;
		proxy_pass_request_body on;
		proxy_buffering off;
		proxy_request_buffering off;
		proxy_socket_keepalive off;
		proxy_ssl_server_name on;
		keepalive_timeout 0;
		proxy_cache off;
		proxy_redirect off;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 208w;
		proxy_set_header Content-Type $http_content_type;
		proxy_set_header Content-Length $http_content_length;
		proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
		proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
		allow_headers on;
		allow_header Content-Type;
		allow_header Transfer-Encoding;
		allow_header Content-Length;
		allow_header Access-Control-Allow-Origin;
		allow_header Access-Control-Allow-Headers;
		allow_header Access-Control-Allow-Methods;
		limit_req zone=wallet burst=40 delay=20;
		proxy_pass http://ip6-localhost:9000;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_enabled.html;
	}
	
	# Donate
	location = /donate/v2/foreign {
	
		# Proxy request
		proxy_http_version 1.1;
		proxy_pass_request_headers off;
		proxy_pass_request_body on;
		proxy_buffering off;
		proxy_request_buffering off;
		proxy_socket_keepalive off;
		proxy_ssl_server_name on;
		keepalive_timeout 0;
		proxy_cache off;
		proxy_redirect off;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 60s;
		proxy_set_header Content-Type $http_content_type;
		proxy_set_header Content-Length $http_content_length;
		proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
		proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
		allow_headers on;
		allow_header Content-Type;
		allow_header Transfer-Encoding;
		allow_header Content-Length;
		allow_header Access-Control-Allow-Origin;
		allow_header Access-Control-Allow-Headers;
		allow_header Access-Control-Allow-Methods;
		limit_req zone=donate burst=40 delay=20;
		proxy_pass http://ip6-localhost:3415/v2/foreign;
		client_max_body_size 10M;
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
		
		# Error page
		error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 420 422 423 424 426 428 429 431 444 449 450 451 500 501 502 503 504 505 506 507 508 509 510 511 /errors/proxy_error_cors_enabled.html;
	}
	
	# PHP config
	location = /.user.ini {
		
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Backend
	location ~ ^/backend/.*$ {
		
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Languages
	location ~ ^/languages/.*$ {
		
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Template
	location = /errors/template.php {
	
		# Return error 404
		rewrite ^ /errors/404.html last;
	}
	
	# Robots
	location = /robots.txt {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in 30 days
		expires 30d;
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Sitemap
	location = /sitemap.xml {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in 30 days
		expires 30d;
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Favicon
	location = /favicon.ico {
	
		# Expires in 30 days
		expires 30d;
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
	}
	
	# Privacy policy
	location = /privacy_policy.txt {
	
		# Turn off ETags
		etag off;
		
		# Remove last modified header
		add_header Last-Modified "";
	
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
	}
	
	# Connection test
	location = /connection_test.html {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
	
		# Turn off ETags
		etag off;
		
		# Disable range
		max_ranges 0;
		
		# Remove last modified header
		add_header Last-Modified "";
		
		# Allow cross origin access
		add_header Access-Control-Allow-Origin "https://mwcwallet.com";
		
		# Don't let browsers/proxies cache or edit the response
		add_header Cache-Control "no-store, no-transform" always;
	}
	
	# Service worker
	location = /scripts/service_worker.js {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in one day
		expires 1d;
		
		# Allow worker to be imported
		add_header Cross-Origin-Embedder-Policy "require-corp";
		
		# Don't let browsers/proxies edit the response and make it revalidate when it expires
		add_header "Cache-Control" "public, no-transform, must-revalidate";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Web workers
	location ~ ^/scripts/(?:output_worker|camera_worker|slate_worker)\.js$ {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Allow worker to be imported
		add_header Cross-Origin-Embedder-Policy "require-corp";
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Font CSS
	location ~ ^/fonts/.+\.css$ {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Preprocess CSS
	location ~ ^/styles/(?:unlocked|section)\.css$ {
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# Proxy error CORS enabled
	location = /errors/proxy_error_cors_enabled.html {
	
		# Only allow internal requests to this location
		internal;
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
	
		# Turn off ETags
		etag off;
		
		# Disable range
		max_ranges 0;
		
		# Remove last modified header
		add_header Last-Modified "";
		
		# Don't let browsers/proxies cache or edit the response
		add_header "Cache-Control" "no-store, no-transform" always;
		
		# Allow cross origin access
		add_header Access-Control-Allow-Origin "*" always;
	}
	
	# Proxy error CORS disabled
	location = /errors/proxy_error_cors_disabled.html {
	
		# Only allow internal requests to this location
		internal;
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
	
		# Turn off ETags
		etag off;
		
		# Disable range
		max_ranges 0;
		
		# Remove last modified header
		add_header Last-Modified "";
		
		# Don't let browsers/proxies cache or edit the response
		add_header "Cache-Control" "no-store, no-transform" always;
	}
	
	# Root
	location = /index.html {
	
		# Check if URL is /index.html
		if ($request_uri ~ ^/index\.html) {
		
			# Redirect to /
			return 301 http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion/$is_args$args;
		}
		
		# Check if user isn't the server
		if ($remote_addr != $server_addr) {
		
			# Set enforce maintenance component
			set $enforceMaintenance Y;
		}
	
		# Check if user isn't from an allowed IP address
		if ($remote_addr !~ ^(?:127\.0\.0\.1)$) {
		
			# Set enforce maintenance component
			set $enforceMaintenance "${enforceMaintenance}E";
		}
	
		# Check if performing site maintenance
		if (-f $document_root/../performing_maintenance.txt) {
		
			# Set enforce maintenance component
			set $enforceMaintenance "${enforceMaintenance}S";
		}
		
		# Check if enforcing site maintenance
		if ($enforceMaintenance = YES) {
			
			# Return error 503
			rewrite ^ /errors/503.html last;
		}
		
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Only allow being in an iframes of the same origin
		more_set_headers -s 200 "X-Frame-Options: DENY";
		
		# Disable MIME sniffing
		more_set_headers -s 200 "X-Content-Type-Options: nosniff";
		
		# Prevent loading page if reflected cross-site scripting attack is detected
		more_set_headers -s 200 "X-XSS-Protection: 1; mode=block";
		
		# Isolate the browsing context for the site
		more_set_headers -s 200 "Cross-Origin-Opener-Policy: same-origin";
		more_set_headers -s 200 "Cross-Origin-Embedder-Policy: require-corp";
		
		# Set content security policy
		more_set_headers -s 200 "Content-Security-Policy: default-src 'self'; connect-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:";
		
		# Set referrer policy to not include a referrer header
		more_set_headers -s 200 "Referrer-Policy: same-origin";
		
		# Set permissions policy
		more_set_headers -s 200 "Permissions-Policy: camera=(self), screen-wake-lock=(self), clipboard-write=(self), usb=(self), bluetooth=(self), cross-origin-isolated=(self), vertical-scroll=(self), execution-while-not-rendered=(self), execution-while-out-of-viewport=(self), focus-without-user-activation=(self), autoplay=(), display-capture=(), encrypted-media=(), fullscreen=(), hid=(), idle-detection=(), otp-credentials=(), picture-in-picture=(), serial=(), sync-xhr=(), accelerometer=(), document-domain=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), publickey-credentials-get=(), xr-spatial-tracking=(), clipboard-read=(), ambient-light-sensor=(), attribution-reporting=(), gamepad=(), keyboard-map=(), window-placement=()";
		
		# Don't let browsers/proxies cache or edit the response
		more_set_headers -s 200 "Cache-Control: no-store, no-transform";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_param HTTP_SERVER_ADDRESS https://mwcwallet.com;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# HTML
	location ~* \.html$ {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Only allow being in an iframes of the same origin
		add_header X-Frame-Options "DENY" always;
		
		# Disable MIME sniffing
		add_header X-Content-Type-Options "nosniff" always;
		
		# Prevent loading page if reflected cross-site scripting attack is detected
		add_header X-XSS-Protection "1; mode=block" always;
		
		# Isolate the browsing context for the site
		add_header Cross-Origin-Opener-Policy "same-origin" always;
		add_header Cross-Origin-Embedder-Policy "require-corp" always;
		
		# Set content security policy
		add_header Content-Security-Policy "default-src 'self'; connect-src *; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:" always;
		
		# Set referrer policy to not include a referrer header
		add_header Referrer-Policy "same-origin" always;
		
		# Set permissions policy
		add_header Permissions-Policy "camera=(self), screen-wake-lock=(self), clipboard-write=(self), usb=(self), bluetooth=(self), cross-origin-isolated=(self), vertical-scroll=(self), execution-while-not-rendered=(self), execution-while-out-of-viewport=(self), focus-without-user-activation=(self), autoplay=(), display-capture=(), encrypted-media=(), fullscreen=(), hid=(), idle-detection=(), otp-credentials=(), picture-in-picture=(), serial=(), sync-xhr=(), accelerometer=(), document-domain=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), publickey-credentials-get=(), xr-spatial-tracking=(), clipboard-read=(), ambient-light-sensor=(), attribution-reporting=(), gamepad=(), keyboard-map=(), window-placement=()" always;
		
		# Don't let browsers/proxies cache or edit the response
		add_header "Cache-Control" "no-store, no-transform" always;
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_param HTTP_SERVER_ADDRESS https://mwcwallet.com;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# XML and manifest
	location ~* \.(?:xml|webmanifest)$ {
	
		# Check if file doesn't exist
		if (!-f $document_root$fastcgi_script_name) {
		
			# Return error 404
			return 404;
		}
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
		
		# Process PHP scripts
		fastcgi_param HTTP_PROXY "";
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
	}
	
	# JavaScript, CSS, JSON, images, and text
	location ~* \.(?:js|css|json|png|ico|svg|txt)$ {
	
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# WOFF font
	location ~* \.woff$ {
	
		# Set mime type
		default_type font/woff;
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# WOFF2 font
	location ~* \.woff2$ {
	
		# Set mime type
		default_type font/woff2;
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# WebAssembly
	location ~* \.wasm$ {
	
		# Set mime type
		default_type application/wasm;
		
		# Expires in two years
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
	
	# Shaders
	location ~* \.(?:vert|frag)$ {
	
		# Set mime type
		default_type text/plain;
		
		# Expires in two year
		expires 2y;
		
		# Don't let browsers/proxies edit the response and don't have it revalidate when not expired
		add_header "Cache-Control" "public, no-transform, immutable";
	}
}

# Cookie
map $http_cookie $cookie {
	"~*Preloaded=true" "$sent_http_set_cookie";
	default "Preloaded=true; Max-Age=63072000; HttpOnly; Secure; SameSite=Strict; Priority=High; Path=/";
}

# Resources
map $http_cookie $resources {
	"~*Preloaded=true" "";
	default "</images/logo_big.svg?3>; as=image; rel=preload, </images/logo_small.svg?3>; as=image; rel=preload, </fonts/open_sans/open_sans-1.10.woff2?3>; as=font; rel=preload; crossorigin=anonymous, </fonts/mwc/mwc.woff2?3>; as=font; rel=preload; crossorigin=anonymous, </fonts/grin/grin.woff2?3>; as=font; rel=preload; crossorigin=anonymous, </fonts/btc/btc.woff2?3>; as=font; rel=preload; crossorigin=anonymous, </fonts/eth/eth.woff2?3>; as=font; rel=preload; crossorigin=anonymous, </styles/normalize.css-8.0.1.css?3>; as=style; rel=preload; integrity=sha512-oHDEc8Xed4hiW6CxD7qjbnI+B07vDdX7hEPTvn9pSZO1bcRqHp8mj9pyr+8RVC2GmtEfI2Bi9Ke9Ass0as+zpg==, </fonts/open_sans/open_sans.css?3>; as=style; rel=preload, </fonts/font_awesome/font_awesome.css?3>; as=style; rel=preload, </images/circle.svg?3>; as=image; rel=preload, </images/down_arrow.svg?3>; as=image; rel=preload";
}

# Onion location
map $http_referer $onion_location {
	"~^https://mwcwallet\.com/scripts/service_worker\.js$" "http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion/";
	"~^https://mwcwallet\.com(/.*)$" "http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion$1";
	default "http://mwcwalletmiq3gdkmfbqlytxunvlxyli4m6zrqozk7xjc353ewqb6bad.onion$request_uri";
}
